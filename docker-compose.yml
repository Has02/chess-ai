version: '3.8'

services:
  # Development service
  chess-ai-dev:
    build:
      context: .
      dockerfile: Dockerfile
      target: development
    ports:
      - "8000:8000"
    volumes:
      - .:/app
      - /app/__pycache__
    environment:
      - ENVIRONMENT=development
      - DEBUG=true
    command: python -m uvicorn main:app --host 0.0.0.0 --port 8000 --reload
    networks:
      - chess-ai-network

  # Production service
  chess-ai-prod:
    build:
      context: .
      dockerfile: Dockerfile
      target: production
    ports:
      - "8001:8000"
    environment:
      - ENVIRONMENT=production
      - DEBUG=false
    restart: unless-stopped
    networks:
      - chess-ai-network

  # Redis for caching (useful for chess AI)
  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - chess-ai-network
    restart: unless-stopped

  # PostgreSQL for storing game data
  postgres:
    image: postgres:15-alpine
    environment:
      POSTGRES_DB: chess_ai
      POSTGRES_USER: chessai
      POSTGRES_PASSWORD: chessai_password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - chess-ai-network
    restart: unless-stopped

networks:
  chess-ai-network:
    driver: bridge

volumes:
  redis_data:
  postgres_data:
